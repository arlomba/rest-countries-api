{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["// Initial state\nlet countriesData = [];\n\nconst fetchCountries = async () => {\n  const res = await fetch(\"https://restcountries.com/v2/all\");\n  const data = await res.json();\n\n  return data;\n};\n\nconst transformCountryFields = (countries) => {\n  return countries.map((country) => {\n    const {\n      name,\n      flag,\n      population,\n      capital,\n      region,\n      topLevelDomain,\n      nativeName,\n      alpha3Code,\n      subregion,\n      languages,\n      currencies,\n      borders,\n    } = country;\n    const tld = topLevelDomain.map((tld) => tld).join(\" \");\n\n    return {\n      name,\n      flag,\n      population: population.toLocaleString(),\n      capital: capital || \"¯\\\\_(ツ)_/¯\",\n      region,\n      tld,\n      native: nativeName,\n      alpha3Code,\n      subregion,\n      languages: languages.map((l) => l.name).join(\", \"),\n      currencies: currencies\n        ? currencies.map((c) => c.name).join(\", \")\n        : \"¯\\\\_(ツ)_/¯\",\n      borders,\n    };\n  });\n};\n\n// Convert a border alpha code to its country name\nconst borderToName = (border) => {\n  if (!border) return;\n\n  const country = countriesData.find((c) => c.alpha3Code === border);\n\n  return country.name;\n};\n\n// Create a button with the name of the border country\nconst createBorderTemplate = (border) => {\n  const countryBorder = document.createElement(\"button\");\n\n  countryBorder.classList.add(\n    \"border-2\",\n    \"border-gray-500\",\n    \"shadow\",\n    \"py-2\",\n    \"px-4\",\n    \"dark:border-0\",\n    \"dark:bg-blue-700\"\n  );\n  countryBorder.textContent = borderToName(border);\n  countryBorder.addEventListener(\"click\", () => {\n    setCountryDetails(countriesData.find((c) => c.alpha3Code === border));\n  });\n\n  return countryBorder;\n};\n\nconst setCountryCards = (countries) => {\n  document.querySelector(\".js-country-list\").innerHTML = \"\";\n\n  countries.forEach((c) => {\n    const countryCard = document.querySelector(\".js-country-card\").content;\n    const country = countryCard.cloneNode(true);\n\n    country.querySelector(\"[data-country-flag]\").src = c.flag;\n    country.querySelector(\"[data-country-flag]\").alt = `Flag of ${c.name}`;\n    country.querySelector(\"[data-country-name]\").textContent = c.name;\n    country.querySelector(\"[data-country-population]\").textContent =\n      c.population;\n    country.querySelector(\"[data-country-region]\").textContent = c.region;\n    country.querySelector(\"[data-country-capital]\").textContent = c.capital;\n\n    country.querySelector(\"article\").addEventListener(\"click\", () => {\n      setCountryDetails(c);\n    });\n\n    document.querySelector(\".js-country-list\").appendChild(country);\n  });\n};\n\nconst setCountryDetails = (c) => {\n  document.querySelector(\".js-country-modal\").innerHTML = \"\";\n\n  const countryDetails = document.querySelector(\".js-country-details\").content;\n  const country = countryDetails.cloneNode(true);\n\n  country.querySelector(\".js-close-modal\").addEventListener(\"click\", () => {\n    document.querySelector(\".js-country-modal\").innerHTML = \"\";\n  });\n\n  country.querySelector(\"[data-country-flag]\").src = c.flag;\n  country.querySelector(\"[data-country-flag]\").alt = `Flag of ${c.name}`;\n  country.querySelector(\"[data-country-name]\").textContent = c.name;\n  country.querySelector(\"[data-country-population]\").textContent = c.population;\n  country.querySelector(\"[data-country-region]\").textContent = c.region;\n  country.querySelector(\"[data-country-capital]\").textContent = c.capital;\n  country.querySelector(\"[data-country-native]\").textContent = c.native;\n  country.querySelector(\"[data-country-subregion]\").textContent = c.subregion;\n  country.querySelector(\"[data-country-tld]\").textContent = c.tld;\n  country.querySelector(\"[data-country-languages]\").textContent = c.languages;\n  country.querySelector(\"[data-country-currencies]\").textContent = c.currencies;\n\n  const borderCountry = country.querySelector(\"[data-country-borders]\");\n\n  if (c.borders) {\n    c.borders.forEach((border) => {\n      borderCountry.appendChild(createBorderTemplate(border));\n    });\n  } else {\n    borderCountry.textContent = \"¯\\\\_(ツ)_/¯\";\n  }\n\n  document.querySelector(\".js-country-modal\").appendChild(country);\n};\n\n// Fetch countries and set the fields\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  const countries = await fetchCountries();\n\n  countriesData = await transformCountryFields(countries);\n\n  setCountryCards(countriesData);\n});\n\n// Search by country name\ndocument.querySelector(\".js-search-country\").addEventListener(\"input\", (e) => {\n  const search = e.target.value.toLowerCase().trim();\n\n  const filteredCountries = countriesData.filter((country) => {\n    return country.name.toLowerCase().includes(search);\n  });\n\n  setCountryCards(filteredCountries);\n});\n\n// Filter by region\ndocument.querySelector(\".js-select-region\").addEventListener(\"change\", (e) => {\n  const region = e.target.value;\n\n  const filteredCountries = countriesData.filter((country) => {\n    return country.region.toLowerCase() === region;\n  });\n\n  setCountryCards(filteredCountries);\n});\n\n// Toggle theme\ndocument.querySelector(\".js-toggle-theme\").addEventListener(\"click\", () => {\n  document.documentElement.classList.toggle(\"dark\");\n});\n"],"names":["countriesData","fetchCountries","async","res","fetch","json","transformCountryFields","countries","map","country","name","flag","population","capital","region","topLevelDomain","nativeName","alpha3Code","subregion","languages","currencies","borders","tld1","tld","join","toLocaleString","native","l","c","borderToName","border","find","createBorderTemplate","countryBorder","document","createElement","classList","add","textContent","addEventListener","setCountryDetails","setCountryCards","querySelector","innerHTML","forEach","content","cloneNode","src","alt","appendChild","borderCountry","e","search","target","value","toLowerCase","trim","filteredCountries","filter","includes","documentElement","toggle"],"version":3,"file":"index.9adbc3ee.js.map"}