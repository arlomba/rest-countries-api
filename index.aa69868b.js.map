{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["// Initial state\nlet countriesData = [];\n\nconst fetchCountries = async () => {\n  const res = await fetch(\"https://restcountries.com/v2/all\");\n  const data = await res.json();\n\n  return data;\n};\n\nconst transformCountryFields = (countries) => {\n  return countries.map((country) => {\n    const {\n      name,\n      flag,\n      population,\n      capital,\n      region,\n      topLevelDomain,\n      nativeName,\n      alpha3Code,\n      subregion,\n      languages,\n      currencies,\n      borders,\n    } = country;\n    const tld = topLevelDomain.map((tld) => tld).join(\" \");\n\n    return {\n      name,\n      flag,\n      population: population.toLocaleString(),\n      capital: capital || \"¯\\\\_(ツ)_/¯\",\n      region,\n      tld,\n      native: nativeName,\n      alpha3Code,\n      subregion,\n      languages: languages.map((l) => l.name).join(\", \"),\n      currencies: currencies\n        ? currencies.map((c) => c.name).join(\", \")\n        : \"¯\\\\_(ツ)_/¯\",\n      borders,\n    };\n  });\n};\n\n// Convert a border alpha code to its country name\nconst borderToName = (border) => {\n  if (!border) return;\n\n  const country = countriesData.find((c) => c.alpha3Code === border);\n\n  return country.name;\n};\n\n// Create a button with the name of the border country\nconst createBorderTemplate = (border) => {\n  const countryBorder = document.createElement(\"button\");\n\n  countryBorder.classList.add(\n    \"border-2\",\n    \"border-gray-500\",\n    \"shadow\",\n    \"py-2\",\n    \"px-4\",\n    \"dark:border-0\",\n    \"dark:bg-blue-700\"\n  );\n  countryBorder.textContent = borderToName(border);\n  countryBorder.addEventListener(\"click\", () => {\n    setCountryDetails(countriesData.find((c) => c.alpha3Code === border));\n  });\n\n  return countryBorder;\n};\n\nconst setCountryCards = (countries) => {\n  document.querySelector(\".js-country-list\").innerHTML = \"\";\n\n  countries.forEach((c) => {\n    const countryCard = document.querySelector(\".js-country-card\").content;\n    const country = countryCard.cloneNode(true);\n\n    country.querySelector(\"[data-country-flag]\").src = c.flag;\n    country.querySelector(\"[data-country-flag]\").alt = `Flag of ${c.name}`;\n    country.querySelector(\"[data-country-name]\").textContent = c.name;\n    country.querySelector(\"[data-country-population]\").textContent =\n      c.population;\n    country.querySelector(\"[data-country-region]\").textContent = c.region;\n    country.querySelector(\"[data-country-capital]\").textContent = c.capital;\n\n    country.querySelector(\"article\").addEventListener(\"click\", () => {\n      setCountryDetails(c);\n    });\n\n    document.querySelector(\".js-country-list\").appendChild(country);\n  });\n};\n\nconst setCountryDetails = (c) => {\n  document.querySelector(\".js-country-modal\").innerHTML = \"\";\n\n  const countryDetails = document.querySelector(\".js-country-details\").content;\n  const country = countryDetails.cloneNode(true);\n\n  country.querySelector(\".js-close-modal\").addEventListener(\"click\", () => {\n    document.querySelector(\".js-country-modal\").innerHTML = \"\";\n  });\n\n  country.querySelector(\"[data-country-flag]\").src = c.flag;\n  country.querySelector(\"[data-country-flag]\").alt = `Flag of ${c.name}`;\n  country.querySelector(\"[data-country-name]\").textContent = c.name;\n  country.querySelector(\"[data-country-population]\").textContent = c.population;\n  country.querySelector(\"[data-country-region]\").textContent = c.region;\n  country.querySelector(\"[data-country-capital]\").textContent = c.capital;\n  country.querySelector(\"[data-country-native]\").textContent = c.native;\n  country.querySelector(\"[data-country-subregion]\").textContent = c.subregion;\n  country.querySelector(\"[data-country-tld]\").textContent = c.tld;\n  country.querySelector(\"[data-country-languages]\").textContent = c.languages;\n  country.querySelector(\"[data-country-currencies]\").textContent = c.currencies;\n\n  const borderCountry = country.querySelector(\"[data-country-borders]\");\n\n  if (c.borders) {\n    c.borders.forEach((border) => {\n      borderCountry.appendChild(createBorderTemplate(border));\n    });\n  } else {\n    borderCountry.textContent = \"¯\\\\_(ツ)_/¯\";\n  }\n\n  document.querySelector(\".js-country-modal\").appendChild(country);\n};\n\n// Fetch countries and set the fields\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  const countries = await fetchCountries();\n\n  countriesData = await transformCountryFields(countries);\n\n  setCountryCards(countriesData);\n});\n\n// Search by country name\ndocument.querySelector(\".js-search-country\").addEventListener(\"input\", (e) => {\n  const search = e.target.value.toLowerCase().trim();\n\n  const filteredCountries = countriesData.filter((country) => {\n    return country.name.toLowerCase().includes(search);\n  });\n\n  setCountryCards(filteredCountries);\n});\n\n// Filter by region\ndocument.querySelector(\".js-select-region\").addEventListener(\"change\", (e) => {\n  const region = e.target.value;\n\n  const filteredCountries = countriesData.filter((country) => {\n    return country.region.toLowerCase() === region;\n  });\n\n  setCountryCards(filteredCountries);\n});\n\n// Toggle theme\ndocument.querySelector(\".js-toggle-theme\").addEventListener(\"click\", () => {\n  document.documentElement.classList.toggle(\"dark\");\n});\n"],"names":[],"version":3,"file":"index.aa69868b.js.map","sourceRoot":"/__parcel_source_root/"}